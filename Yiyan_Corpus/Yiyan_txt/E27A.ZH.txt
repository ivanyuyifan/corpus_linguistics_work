如何制作电子书？
制作电子书很简单，与你编程经验丰富与否无关。
这点很对，因为你99.9%的时间应该花费在写作，并集结成书上面，而非纠缠于技术细节。
EPUB 和 Kindle
任何以电子信息形式存储的书都可被称作是电子书（eBook），但是由于90%以上的电子书是通过亚马逊的Kindle，苹果的iOS设备（iPad，iPhone和iPod）及巴诺的Nook阅读的，因此我将关注下上述平台所支持的电子书格式类型：
EPUB格式
这是苹果，巴诺以及其他电子书阅读器制造商所采纳的开放标准。
但遗憾的是亚马逊下一代的Kindle已决定不支持EPUB格式。
Kindle格式
这是亚马逊Kindle所使用的私有格式，系Mobipocket格式的变种。
PDF格式
PDF原本是做打印之用，在数字设备上显示效果不好，但是如果你的确需要将数据导入到iOS或是Android设备上的话，那么这个格式很有用。
（更新：Kindle也支持PDF）
题外话：目前版本的EPUB是就XHTML1.1标准的，该标注是1999年正式提出的。
当年IE5问世，并从网景公司公司手中夺走50%的市场份额。
好的地方是，XHTML是开放标准，坏的地方是，这个标准太老了。
哪类书最适合做电子书？
EPUB真正是用来显示文本，以及一些内嵌图片。
尽管使用EPUB来做儿童书，漫画书，旅游书和烹饪书也是可以的，但是工作量巨大，而且在各平台上的表现不一致。
根据经验，电子书最适合有大量文字内容的图书（像纽约时报书榜上的畅销书）。
在判断你手中的书是否适合做成电子书时，请随时牢记，电子书的”杀手锏“功能就是能够增加字体（有些意外吧）。
这表明所有书都可以变成大字体，这也是过去几年中婴儿潮一代人接受电子书的重要原因。
另外需要牢记的是有超过一半的电子书阅读设备是黑白的，这也是要放弃图片类书籍的的另一重要原因。
这些格式和设备的局限会岁渐时间变化，但是目前，我建议制作的第一本电子书最好是文字类的。
题外话：如果你对在iOS设备上制作图画书很感兴趣，并且不怕写代码，可拜读Elizabeth Castro的指南，学习如何制作固定布局（Fix-layout）的EPUB文件。
制作你的第一本电子书
制作电子书最简单的办法是外包。
另外诸如Lulu和Smashwords的网站也可以非常方便的将Word文档转换成EPUBw文件。
这些网站与亚马逊和苹果有联系，它们不仅能够帮你制作电子书，而且在收取一点费用后帮你把书提及到上述平台的电子书城中。
若要了解有关服务选择更多信息，读者可查阅Christine Mark这篇EPUB出版商服务选择指南的文章
如果你只想在亚马逊的kindle商店售书，你可以将Word文件自己提交到亚马逊的数字自助出版平台 Kindle Direct Publishing ，免费转换文档格式。
如果你对苹果生态圈很感兴趣，你可能在自己机器上已经安装有Pages（如果没，花20美元就可以买份）。
Pages是苹果版的Word，提供便捷有效的EPUB导出选项。
要制作自己的电子书，只需将第一页作为封面，在章节之间使用分节符（section break），然后选择文件→导出→EPUB。
如果你手头没有Mac，或者想转换成更多的格式，那你最佳的选择就是Calibre，Calibre使用极为简单，并且可从将诸多格式（其中就包括微软的Word）转换成电子书格式（EPUB和Kindle的Mobipocket格式）。
你可免费下载Calibre。
如果你秩序转换成Kindle的格式，亚马逊提供了免费的转换软件Kindlegen。
制作电子书的另一常见之选是用inDesign，但是若你还没有通过制作过几本电子积累些经验的话，我建议你先不用考虑。
虽然从技术上讲它可以导出EPUB和Kindle格式，但是有点笨拙，并且而且夹诸多杂私货。
更为重要的是，InDesign完全是为从印刷方面考虑制作的，它鼓励你从印刷效果的具体表现上思考，这点并不总是适合电子书，并且会导致布局问题。
依我经验之见，手工编写EPUB更容易。
但我仍不推荐这样干。
手工编写EPUB
如果上面讲的东西听起来太简单了，你想寻找点挑战，那么你可以自手工编写EPUB文件代码。
不过写起来的感觉仿佛穿越时空隧道，回到以前。
EPUB是以过时的旧版XHTML为基础的，你有一半的时间会不停的提醒自己要在描述文件（manifest file）中声明EPUB的所有内容，而另一半时间你则不停的回想上世纪90年代你是怎么书写HMTL的。
到这里你还不知难而退，渴望学习手工书写EPUB文件，那么你面前有两个选择：
从网上随便找个没带数字版权保护（DRM）的EPUB文件，将文件后缀.epub改成.zip，然后解压（如果你用的是苹果Mac，你可能需要用到Stuffit Expander）。
接下来你就可以深入内部了解情况。
请牢记，EPUB中的任何文件都必须在manifest（package.opf）中，你可从这个页面上挑选几本书开始练习（其中就包含我最畅销的少儿图书，你可以从我的网站上免费下载，或者从苹果的网上书店下载，献点”爱心“）。
读读Elizabeth Castro的《直奔主题学做EPUB电子书》，她会领你学习EPUB电子书的制作。 
container.xml文件，MIME类型以及文件夹结构对所有类型的书而言都是标准化的。
图片可以是PNG，JPEG，GIF和SVG格式，我一般优先采用PNG，JPEG做后备选项。
epb.ncx文件是内容目录，也很直观。
epb.opf文件是manifest，你可以设置元数据（书名，作者，ISBN书号等）。EPUB中的所有文件都需在此声明。
所有的图片，HTML，CSS文件都必须罗列与此。
这点非常蛋疼，也是我个人不推荐手工写EPUB文件的原因之一。
不过这里的CSS是个CSS部分子集，除此之外没有差别。
HTML也非常直观，下面就是用苹果Pages从我的电子书中剥离出的部分内容。
如你所见，代码并不优雅（像使用而不是简单采用），但是实用性还行，并且易于理解。
如果正在制作自己的EPUB电子书，记得使用Threepress验证工具 做下检验，另外也可考虑使用 Calibre将EPUB转成kindle支持的格式。
EPUB的未来
EPUB3.0承载这诸多期许，其中就包括下列内容（其中不少已经被苹果采纳）： 
支持HTML5和CSS2.1
文件名称和位置的各种结构性变化。
支持内嵌字体，音频和视频，另外也支持媒体覆盖（Media overlays），触发器以及脚本。
遗憾的是，EPUB 3.0仍不支持插图类书本，因此我们可以期待苹果或其他厂商围绕这些局限性做一些突破。
随着下一代Kindle对EPUB格式的支持，最终是苹果的EPUB还是亚马逊的EPUB或是纯正的EPUB格式胜出，未来一两年我们便可见分晓。
最终，这个还要取决于于国际数字出版论坛（IDPF）能以多块的速度最终敲定标准。
当然所有对未来的猜测都只是理论上的。
如果你手头有一本书需要出版，那我的建议是别对未来有过多顾虑。
动手做就是了。
